{"version":3,"sources":["registerServiceWorker.js","history.js","components/AuthRoutes.js","actions/actionCreators.js","containers/Contract.js","components/ContractsList.js","containers/Dashboard.js","containers/TransferContract.js","containers/ContractOwnerShow.js","containers/ContractShow.js","components/LoginUser.js","components/SignupUser.js","containers/RegistrationForm.js","components/FileInput.js","containers/ContractNew.js","components/AuthContract.js","components/QRcode.js","components/GetRoutes.js","components/NavBar.js","containers/App.js","store.js","reducers/contractReducer.js","reducers/userReducer.js","reducers/messageReducer.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","history","createHistory","AuthRoutes","_ref","Component","component","rest","currentUser","react_default","a","createElement","Route","Object","assign","render","props","is_authenticated","Redirect","to","pathname","from","loginUser","values","dispatch","type","fetch","method","headers","Content-Type","body","JSON","stringify","user","email","password","response","status","json","loginResponseJson","payload","message","concat","logoutUser","X-User-Email","X-User-Token","authentication_token","signupUser","signupResponse","push","fetchContracts","contracts","allContracts","slice","responseJSON","transferContract","contract","blockchain_id","owner","new_owner","price","tranferResponse","toggleContracts","Contract","handleClick","contractId","_this","id","_this2","this","product_name","onClick","withRouter","connect","current_contracts","bindActionCreators","renderContracts","map","key","containers_Contract","Dashboard","e","target","attributes","href","value","_this$props","isHidden","className","align","length","data-toggle","Link","components_ContractsList","reduxForm","form","handleSubmit","onSubmit","Field","name","placeholder","normalize","undefined","v","toString","replace","indexOf","parseFloat","label","ContractOwnerShow","copied","data","histories","i","src","process","alt","height","width","containers_TransferContract","product_info","react_copy_to_clipboard_lib","text","split","onCopy","setState","style","color","open","lib","isKey","dataField","dataFormat","cell","row","ownProps","userContract","find","params","ContractShow","renderField","_ref2","input","_ref2$meta","meta","touched","warning","Alert","bsStyle","components_LoginUser","validate","errors","test","components_SignupUser","Form","FileInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","files","React","renderTextarea","_ref3","_ref3$meta","details","formData","FormData","append","image","res","createContract","isUserOwner","self","qrcode_react_lib_default","size","event","canvas","currentTarget","link","document","download","toDataURL","click","Switch","exact","components_AuthRoutes","path","ContractNew","AuthContract","ContractsList","QRcode","RegistrationForm","renderIf","NavLink","renderLinks","App","components_NavBar","components_GetRoutes","persistConfig","storage","blacklist","reducers","combineReducers","arguments","action","toConsumableArray","likes","newContract","formReducer","contractNew","persistedReducer","persistReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","persistor","persistStore","ReactDOM","es","integration_react","Router","src_containers_App","getElementById","URL","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6be4037c.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import createHistory from 'history/createBrowserHistory'\n\nconst history = createHistory()\n\nexport default history\n","import React from 'react'\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\"\n\nconst AuthRoutes = ({ component: Component, rest, currentUser }) => (\n  <Route\n    {...rest}\n    render={props =>\n      currentUser.is_authenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default AuthRoutes\n","import fetch from 'isomorphic-fetch'\nimport history from '../history'\n\nexport const loginUser = (values) => {\n  return (dispatch) => {\n    dispatch({type: 'LOGGIN_ATTEMPT'})\n    return fetch(`/auth/login`, {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(\n        { \"user\": {\n          \"email\" : values.email,\n          \"password\" : values.password\n        }\n      })\n    })\n    .then(response => {\n      if (response.status === 401) {\n        return response.json()\n        .then(loginResponseJson => {\n          let loginAttempt = loginResponseJson\n          dispatch({\n              type: 'UNSUCCESSFUL_USER_LOGIN',\n              payload: loginAttempt\n            })\n        })\n      } else {\n        return response.json()\n        .then(loginResponseJson => {\n          let currentUser = Object.assign({}, loginResponseJson, {is_authenticated: true})\n          let message = `Succesfully Logged in as ${loginResponseJson.email}`\n          dispatch({\n            type: 'SUCCESSFUL_USER_LOGIN',\n            payload: {\n              currentUser,\n              message\n            }\n          })\n        })\n      } history.push('/dashboard')\n    })\n  }\n}\n\nexport const logoutUser = (currentUser) => {\n  return (dispatch) => {\n    dispatch({type: 'LOGGING_USER_OUT'})\n    return fetch(`/auth/logout`,{\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-User-Email': currentUser.email,\n        'X-User-Token': currentUser.authentication_token\n      },\n      body: JSON.stringify(\n        { \"user\": {\"email\" : currentUser.email}})\n    })\n    .then(\n      dispatch({\n        type: 'USER_LOGOUT',\n        payload: {\n          message: 'Succesfully logged out'\n        }\n      })\n    )\n  }\n}\n\nexport const signupUser = (values) => {\n  return (dispatch) => {\n    dispatch({type: 'SIGNUP_ATTEMPT'})\n    return fetch(`/auth/users`, {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(\n          { \"user\": {\n            \"email\" : values.email,\n            \"password\" : values.password\n          }\n        }),\n      })\n      .then(response => {\n        debugger\n        if (response.status !== 201) {\n          response.json()\n          .then(signupResponse => {\n            let message = signupResponse\n            dispatch({\n              type: 'UNSUCCESSFUL_USER_SIGNUP',\n              payload: {\n                message\n              }\n             })\n          })\n        } else {\n          response.json()\n          .then(signupResponse => {\n            let currentUser = Object.assign({}, signupResponse, {is_authenticated: true})\n            let message = `Succesfully Created an account as ${signupResponse.email}`\n            dispatch({\n              type: 'SUCCESSFUL_USER_SIGNUP',\n              payload: {\n                currentUser,\n                message\n              }\n             })\n          })\n        }history.push('/dashboard')\n      })\n  }\n}\n\nexport const fetchContracts = (currentUser) => {\n  return (dispatch) => {\n    dispatch({type: 'LOADING_CONTRACTS'})\n    return fetch(`/auth/contracts`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-User-Email': currentUser.email,\n        'X-User-Token': currentUser.authentication_token\n      }\n    })\n    .then(response => {\n      if (response.status === 200) {\n        response.json()\n        .then(contracts => {\n          let allContracts = contracts.slice(0)\n          dispatch({\n            type: 'FETCH_CONTRACTS',\n            allContracts: allContracts,\n            currentUser: currentUser\n          })\n        })\n      } else {\n        response.json()\n        .then(responseJSON => {\n          dispatch({\n            type: 'FETCH_CONTRACTS',\n            message: responseJSON,\n            currentUser: currentUser\n          })\n        })\n      }\n    })\n\n  }\n}\n\nexport const createContract = (values, currentUser) => {\n  return (dispatch) => {\n    const formData = new FormData()\n    formData.append(\"product_name\", values.name)\n    formData.append(\"product_info\", values.details)\n    formData.append(\"image\", values.image)\n    formData.append(\"price\", values.price)\n    dispatch({type: 'CREATING_CONTRACT'})\n    return fetch(`/auth/contracts`, {\n      method: 'post',\n      headers: {\n        'X-User-Email': currentUser.email,\n        'X-User-Token': currentUser.authentication_token\n      },\n      body: formData\n      })\n      .then(res => {\n        if (res.status === 201 ) {\n          res.json()\n          .then(contract => {\n            dispatch({\n              type: 'CREATE_CONTRACT',\n              payload: {\n                contract: contract,\n                currentUser: currentUser\n              }\n            })\n            history.push(`/dashboard/${currentUser.id}/contracts/${contract.blockchain_id}`)\n          })\n        } else {\n          res.json()\n          .then(response => {\n            const creationAttempt = { message: response}\n            dispatch({\n              type: 'CREATE_CONTRACT',\n              payload: creationAttempt\n            })\n          })\n        }\n      })\n  }\n}\nexport const transferContract = (values, currentUser, dispatch, contract) =>{\n  return (dispatch) => {\n    dispatch({type: 'TRANSFERING_CONTRACT'})\n    return fetch(`/auth/contracts/${contract.blockchain_id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-User-Email': currentUser.email,\n        'X-User-Token': currentUser.authentication_token\n      },\n      body: JSON.stringify(\n        { \"owner\": { \"email\" : currentUser.email },\n          \"new_owner\": {\"email\" : values.email },\n          \"contract\": {\"price\" : values.price }\n      })\n    })\n    .then(response => {\n      if (response.status === 200) {\n        response.json()\n        .then(currentUser => {\n          dispatch({\n            type: 'TRANSFER_CONTRACT',\n            payload: {currentUser}\n          })\n        })\n      }else {\n        response.json()\n        .then(tranferResponse => {\n          const transferAttempt = { message: tranferResponse }\n          dispatch({\n            type: 'TRANSFER_CONTRACT',\n            payload: transferAttempt\n          })\n        })\n      }history.push('/dashboard')\n    })\n  }\n}\n\nexport const toggleContracts = () =>{\n  return (dispatch) => {\n    dispatch({type: 'LOADING_CONTRACTS'})\n    return(\n      dispatch({\n        type: 'TOGGLE_CONTRACTS'\n      })\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass Contract extends Component {\n  handleClick = (contractId) => {\n    return (this.props.history.push(`/dashboard/${this.props.currentUser.id}/contracts/${contractId}`))\n  }\n  render() {\n    const { contract } = this.props\n    return (\n      <p>{contract.product_name} <button onClick={() => this.handleClick(contract.blockchain_id)}>Show</button></p>\n    )\n  }\n}\n\nexport default withRouter((Contract))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { bindActionCreators } from 'redux';\nimport { fetchContracts } from '../actions/actionCreators'\nimport Contract from '../containers/Contract'\n\nconst ContractsList = ({contracts, currentUser, history, location}) => {\n  const renderContracts = contracts.map(contract => {\n    return(\n      <li key={contract.id}>\n        <Contract contract={contract} history={history} currentUser={currentUser}/>\n      </li>\n    )\n  })\n\n  return(\n    <div>\n      {location.pathname === \"/dashboard\" && <h1>Your Contracts</h1>}\n      <ul>\n        {renderContracts}\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, match) => {\n  if (match.location.pathname === \"/dashboard\") {\n    return{\n      currentUser: state.currentUser,\n      contracts: state.currentUser.current_contracts\n    }\n  } else {\n    return{\n      currentUser: state.currentUser,\n      contracts: state.allContracts\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    fetchContracts\n  }, dispatch)\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ContractsList))\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { bindActionCreators } from 'redux';\nimport { fetchContracts, toggleContracts } from '../actions/actionCreators'\nimport { Link } from 'react-router-dom'\nimport ContractsList from '../components/ContractsList'\n\nclass Dashboard extends Component {\n\n  componentDidMount() {\n    this.props.fetchContracts(this.props.currentUser)\n  }\n  handleClick = (e) => {\n    return (this.props.history.push(e.target.attributes.href.value))\n  }\n  renderContracts = () => {\n    this.props.toggleContracts()\n  }\n  render() {\n    const { currentUser, isHidden } = this.props\n    return(\n      <div className=\"container\">\n      \t<div className=\"row\">\n          <div className=\"col-md-offset col-md-12 col-lg-offset-3 col-lg-6\">\n            <div className=\"well profile\">\n              <div className=\"col-sm-12\">\n                <div className=\"col-lg-12\" align=\"left\">\n                  <h1 align=\"center\">Welcome {currentUser.email}</h1>\n                  <p><strong>About: </strong></p>\n                  <p><strong>Interests: </strong></p>\n                  <p><strong>Skills: </strong></p>\n                </div>\n                <div className=\"col-xs-12 divider text-center\">\n                  <div className=\"col-xs-12 emphasis\">\n                    <h2><strong>{currentUser.current_contracts.length}</strong></h2>\n                    <p>Number of Contracts</p>\n                      <div className=\"dropdown\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={ () => this.renderContracts()}><span className=\"\tglyphicon glyphicon-off\"></span> My Contracts </button>\n                        <button type=\"button\" className=\"btn btn-danger dropdown-toggle\" data-toggle=\"dropdown\">\n                          <span className=\"sr-only\">Toggle Dropdown</span>\n                        </button>\n                        <div className=\"dropdown-menu\">\n                          <Link className=\"dropdown-item\" to={`/dashboard/${currentUser.id}/contracts/new`} >New Contract</Link>\n                          <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                          <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                          <div className=\"dropdown-divider\"></div>\n                          <a className=\"dropdown-item\" href=\"#\">Separated link</a>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {(isHidden === false)&& <ContractsList/>}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    isHidden: !state.currentUser.isHidden\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    fetchContracts, toggleContracts\n  }, dispatch)\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { withRouter } from 'react-router-dom'\nimport { transferContract } from '../actions/actionCreators'\n\nconst TransferContract = ({values, dispatch, handleSubmit, currentUser, contract}) => {\n    const transferInfo = (values, dispatch) => {\n      dispatch(transferContract(values, currentUser, dispatch, contract))\n    }\n    const maskMoney = (value) => {\n      if (value === null || value === '' || value === undefined) { return '' }\n      let v = value.toString().replace(/[^\\d.]/g, '')\n      v = v.slice(0, v.indexOf('.') >= 0 ? v.indexOf('.') + 3 : undefined)\n      return parseFloat(v)\n    }\n    return(\n      <div>\n        <h2>Transfer</h2>\n        <form onSubmit={handleSubmit(transferInfo)}>\n          <div>\n            <label><strong>Email</strong></label>\n            <br></br>\n            <Field\n              name=\"email\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n          </div>\n          <br></br>\n          <div>\n            <label><strong>Transfer Price</strong></label>\n            <br></br>\n            <Field\n              name=\"price\"\n              component=\"input\"\n              type=\"number\"\n              placeholder=\"Price\"\n              normalize={maskMoney}\n            />\n          </div>\n          <br></br>\n          <button type=\"submit\" label=\"submit\">Transfer Ownership</button>\n        </form>\n      </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(reduxForm({\n  form: 'TransferContract',\n  transferContract\n})(TransferContract)))\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport {BootstrapTable,\n       TableHeaderColumn} from 'react-bootstrap-table'\nimport TransferContract from '../containers/TransferContract'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\n\nclass ContractOwnerShow extends Component {\n  state = {\n    copied: false\n  }\n  render(){\n    const { contract } = this.props\n\n    const data = contract.histories.map( history => Object.assign({}, history))\n    for (let i = 0; i < data.length; i++) {\n        data[i].id = i + 1\n    }\n\n    function priceFormatter(cell, row) {\n      return `$${cell}`;\n    }\n    return(\n      <div align='center'>\n        <h1>Contract ID: {contract.blockchain_id}</h1>\n        <img src={process.env.PUBLIC_URL + `/uploads/contract/image/${contract.id}/${contract.blockchain_id}.jpg`} alt=\"logo\" height=\"250\" width=\"250\"/>\n        <TransferContract contract={contract} />\n        <h2>Contract information</h2>\n        <p><strong>Price:</strong> ${contract.price}</p>\n        <p><strong>Product name: </strong>{contract.product_name}</p>\n        <p><strong>Product details: </strong></p>\n        <p>{contract.product_info}</p>\n        <CopyToClipboard text={window.location.href.split(\"/\")[0] + \"//\" + window.location.href.split(\"/\")[2] + \"/contracts/\" + window.location.href.split(\"/\")[window.location.href.split(\"/\").length - 1]}\n          onCopy={() => this.setState({copied: true})}>\n          <button>Copy Link to Clipboard</button>\n        </CopyToClipboard>\n        {this.state.copied ? <div><span style={{color: 'red'}}>Copied.</span></div> : null}\n        <button onClick={()=> window.open(`/contracts/${contract.blockchain_id}/code`, \"_blank\")}>Generate QR Code</button>\n\n        <h3>History</h3>\n        <div>\n          <BootstrapTable data={ data }>\n            <TableHeaderColumn isKey dataField='id'>Transfer ID</TableHeaderColumn>\n            <TableHeaderColumn dataField='transfer_price' dataFormat={priceFormatter}>Transfer Price</TableHeaderColumn>\n          </BootstrapTable>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps ) => {\n  const userContract = state.currentUser.current_contracts.find( contract => contract.blockchain_id === ownProps.match.params.contractId )\n  if (userContract) {\n    return { contract: userContract }\n  } else {\n    return { contract: {} }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(ContractOwnerShow))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\n\nclass ContractShow extends Component {\n  state = {\n    copied: false,\n  }\n  render(){\n    const { contract } = this.props\n    return(\n      <div align='center'>\n        <h1>Certificate of Authenticity</h1>\n        <h2>Contract ID: {contract.blockchain_id}</h2>\n        <br></br>\n        <img src={process.env.PUBLIC_URL + `/uploads/contract/image/${contract.id}/${contract.blockchain_id}.jpg`} alt=\"logo\" height=\"250\" width=\"250\"/>\n        <h2>Contract information</h2>\n        <p><strong>Price:</strong> ${contract.price}</p>\n        <p><strong>Product name: </strong>{contract.product_name}</p>\n        <p><strong>Product details: </strong></p>\n        <p>{contract.product_info}</p>\n        <CopyToClipboard text={window.location.href}\n          onCopy={() => this.setState({copied: true})}>\n          <button>Copy Link to Clipboard</button>\n        </CopyToClipboard>\n        {this.state.copied ? <div><span style={{color: 'red'}}>Copied.</span></div> : null}\n        <button onClick={()=> window.open(`/contracts/${contract.blockchain_id}/code`, \"_blank\")}>Generate QR Code</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps ) => {\n  const contract = state.allContracts.find( contract => contract.blockchain_id === ownProps.match.params.contractId )\n\n  if (contract) {\n    return { contract }\n  } else {\n    return { contract: {} }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(ContractShow))\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { loginUser } from '../actions/actionCreators'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from \"react-router-dom\"\nimport { Alert } from 'react-bootstrap'\n\nconst LoginUser = ({ values, handleSubmit, dispatch, location }) => {\n  const loginInfo = (values) => {\n    dispatch(loginUser(values, dispatch))\n  }\n  return(\n    <div className=\"wrapper\">\n      <div className=\"container-login\">\n        <div className=\"stencil\">\n            <div className=\"line\">\n                <div className=\"line\"></div>\n            </div>\n        </div>\n        <div className=\"border-triangle\"></div>\n        <div className=\"content-triangle\"></div>\n        <div className=\"enter-triangle-one\"></div>\n        <div className=\"enter-triangle-two\"></div>\n        <form onSubmit={handleSubmit(loginInfo)}>\n          <div>\n            <label>LOGIN</label>\n          </div>\n          <div className=\"input-inform\">\n            <Field\n              name=\"email\"\n              component={renderField}\n              type=\"text\"\n              placeholder=\"Email\"\n              label=\"Email\"\n            />\n            <Field\n              name=\"password\"\n              component={renderField}\n              type=\"password\"\n              placeholder=\"Password\"\n              label=\"Password\"\n            />\n          </div>\n          <div className=\"enter\">\n            <button type=\"submit\" label=\"submit\" className=\"btn-lg btn-info\">Login</button>\n          </div>\n          <div className=\"form-links\">\n            <span className=\"glyphicon glyphicon-user text-primary\"></span> <Link to=\"/signup\" className=\"btn-lg btn btn-light\">Signup</Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst validate = values => {\n  const errors = {}\n  if (!values.email) {\n    errors.email = 'Required'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required'\n  } else if (values.password.length < 7) {\n    errors.password = 'Must be greater than 7'\n  }\n  return errors\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div>\n    <label><strong>{label}</strong></label>\n    <input {...input} placeholder={label} type={type} className=\"form-control input-md\"/>\n    {touched && ((error && <Alert bsStyle=\"danger\"><strong>{error}</strong></Alert>) || (warning && <span>{warning}</span>))}\n  </div>\n)\n\nexport default withRouter(connect()(reduxForm({\n  form: 'LoginUser',\n  loginUser, validate\n})(LoginUser)))\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { signupUser } from '../actions/actionCreators'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from \"react-router-dom\"\nimport { Alert } from 'react-bootstrap'\n\nconst SignupUser = ({ values, handleSubmit, dispatch, location }) => {\n\n  const signupnInfo = (values) => {\n    dispatch(signupUser(values, dispatch))\n  }\n  return(\n    <div className=\"wrapper\">\n      <div className=\"container-login\">\n        <div className=\"stencil\">\n            <div className=\"line\">\n                <div className=\"line\"></div>\n            </div>\n        </div>\n        <div className=\"border-triangle\"></div>\n        <div className=\"content-triangle\"></div>\n        <div className=\"enter-triangle-one\"></div>\n        <div className=\"enter-triangle-two\"></div>\n        <form onSubmit={handleSubmit(signupnInfo)}>\n          <div>\n            <label>SIGNUP</label>\n          </div>\n          <div className=\"input-inform\">\n            <Field\n              name=\"email\"\n              component={renderField}\n              type=\"text\"\n              placeholder=\"Email\"\n              label=\"Email\"\n            />\n            <Field\n              name=\"password\"\n              component={renderField}\n              type=\"password\"\n              placeholder=\"Password\"\n              label=\"Password\"\n            />\n          </div>\n          <div className=\"enter\">\n            <button type=\"submit\" label=\"submit\" className=\"btn-lg btn-info\">Sigup</button>\n          </div>\n          <div className=\"form-links\">\n            <span className=\"glyphicon glyphicon-user text-primary\"></span> <Link className=\"btn-lg btn btn-light\" to=\"/login\">Login</Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst validate = values => {\n  const errors = {}\n  if (!values.email) {\n    errors.email = 'Required'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required'\n  } else if (values.password.length < 7) {\n    errors.password = 'Must be greater than 7'\n  }\n  return errors\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div>\n    <label><strong>{label}</strong></label>\n    <input {...input} placeholder={label} type={type} className=\"form-control input-md\"/>\n    {touched && ((error && <Alert bsStyle=\"danger\"><strong>Required</strong></Alert>) || (warning && <span>{error}</span>))}\n  </div>\n)\n\nexport default withRouter(connect()(reduxForm({\n  form: 'SignupUser',\n  signupUser, validate\n})(SignupUser)))\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport LoginUser from '../components/LoginUser'\nimport SignupUser from '../components/SignupUser'\n\nclass Form extends Component {\n  render() {\n    const { location } = this.props\n\n    const renderForm = () => {\n      if ( location.pathname === \"/login\"){\n        return (<LoginUser />)\n        } else if ( location.pathname === \"/signup\") {\n          return(<SignupUser />)\n      }\n    }\n    return(\n      renderForm()\n    )\n  }\n}\n\nexport default withRouter(connect()(Form))\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    const { input: { onChange } } = this.props\n    onChange(e.target.files[0])\n  }\n\n  render() {\n    return (<input\n      type=\"file\"\n      onChange={this.onChange}\n    />)\n  }\n}\n\nexport default withRouter(FileInput)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { withRouter } from 'react-router-dom'\nimport FileInput from '../components/FileInput'\nimport { createContract } from '../actions/actionCreators'\n\nconst ContractNew = ({values, dispatch, handleSubmit, currentUser}) => {\n    const contractInfo = (values, dispatch) => {\n      dispatch(createContract(values, currentUser))\n    }\n    const maskMoney = (value) => {\n      if (value === null || value === '' || value === undefined) { return '' }\n      let v = value.toString().replace(/[^\\d.]/g, '')\n      v = v.slice(0, v.indexOf('.') >= 0 ? v.indexOf('.') + 3 : undefined)\n      return parseFloat(v)\n    }\n    return(\n      <div className=\"center-container\">\n    \t\t<div className=\"main\">\n    \t\t\t<h1 className=\"w3layouts_head\">Create a New Contract</h1>\n    \t\t\t\t<div className=\"w3layouts_main_grid\">\n    \t\t\t\t\t<form onSubmit={handleSubmit(contractInfo)} className=\"w3_form_post\">\n    \t\t\t\t\t\t<div className=\"w3_agileits_main_grid w3l_main_grid\">\n    \t\t\t\t\t\t\t<span className=\"agileits_grid\">\n                    <Field\n                      name=\"name\"\n                      component={renderField}\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      label=\"Name\"\n                    />\n    \t\t\t\t\t\t\t</span>\n    \t\t\t\t\t\t</div>\n    \t\t\t\t\t\t<div className=\"w3_agileits_main_grid w3l_main_grid\">\n    \t\t\t\t\t\t\t<span className=\"agileits_grid\">\n                    <Field\n                      name=\"details\"\n                      component={renderTextarea}\n                      type=\"text\"\n                      placeholder=\"Details\"\n                      label=\"Details\"\n                    />\n    \t\t\t\t\t\t\t</span>\n    \t\t\t\t\t\t</div>\n    \t\t\t\t\t\t<div className=\"w3_agileits_main_grid w3l_main_grid\">\n    \t\t\t\t\t\t\t<span className=\"agileits_grid\">\n                    <label><strong>Image</strong></label>\n                    <Field\n                      type=\"file\"\n                      name=\"image\"\n                      component={FileInput}\n                    />\n    \t\t\t\t\t\t\t</span>\n    \t\t\t\t\t\t</div>\n    \t\t\t\t\t\t<div className=\"w3_agileits_main_grid w3l_main_grid\">\n    \t\t\t\t\t\t\t<span className=\"agileits_grid\">\n                    <label><strong>Price</strong></label>\n                    <Field\n                      name=\"price\"\n                      component={renderField}\n                      type=\"number\"\n                      placeholder=\"Price\"\n                      normalize={maskMoney}\n                    />\n    \t\t\t\t\t\t\t</span>\n    \t\t\t\t\t\t</div>\n    \t\t\t\t\t<div className=\"w3_main_grid\">\n    \t\t\t\t\t\t<div className=\"w3_main_grid_right\">\n    \t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\"></input>\n    \t\t\t\t\t\t</div>\n    \t\t\t\t\t</div>\n    \t\t\t\t</form>\n    \t\t\t</div>\n    \t\t</div>\n    \t</div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n  }\n}\nconst validate = values => {\n  const errors = {}\n  if (!values.name) {\n    errors.name = 'Required'\n  }\n  if (!values.details) {\n    errors.details = 'Required'\n  }\n  return errors\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n      <strong><label>{label}</label></strong>\n      <div>\n        <input {...input} placeholder={label} type={type}/>\n        {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\nconst renderTextarea = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div>\n    <strong><label>{label}</label></strong>\n    <div>\n      <textarea {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span><strong>{error}</strong></span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\n\nexport default withRouter(connect(mapStateToProps)(reduxForm({\n  form: 'ContractNew',\n  validate\n})(ContractNew)))\n","import React from 'react'\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\"\n\nconst AuthRoutes = ({ component: Component, rest, currentUser, location }) => {\n  const isUserOwner = (currentUser, location) => {\n    const contract = currentUser.current_contracts.find( contract => contract.blockchain_id === location.pathname.split(\"/\")[4])\n    return !(contract === undefined || contract === null)\n  }\n\n  return(\n    <Route\n      {...rest}\n      render={props =>\n        isUserOwner(currentUser, location) ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: `/contracts/${location.pathname.split(\"/\")[4]}`,\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport default AuthRoutes\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport QRCode from 'qrcode.react';\n\nconst QRcode = ({contract, self}) => {\n  const handleClick = (event) => {\n    let canvas = event.currentTarget\n    var link = document.createElement('a')\n    link.download = `${contract.blockchain_id}`\n    link.href = canvas.toDataURL(\"image/png;base64\")\n    link.click()\n  }\n  return(\n    <div align=\"center\" >\n      <h2>Click on Code to Download</h2>\n      <br></br>\n      <QRCode size={200} onClick={(event) => handleClick(event)} value={window.location.href.split(\"/\")[0] + \"//\" + window.location.href.split(\"/\")[2] + \"/contracts/\" + contract.blockchain_id}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps ) => {\n  const contract = state.allContracts.find( contract => contract.blockchain_id === ownProps.match.params.contractId )\n\n  if (contract) {\n    return { contract }\n  } else {\n    return { contract: {} }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(QRcode))\n","import {\n  Switch,\n  Route,\n  Redirect,\n  withRouter\n} from \"react-router-dom\"\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport AuthRoutes from './AuthRoutes'\nimport Dashboard from '../containers/Dashboard'\nimport ContractOwnerShow from '../containers/ContractOwnerShow'\nimport ContractShow from '../containers/ContractShow'\nimport RegistrationForm from '../containers/RegistrationForm'\nimport ContractNew from '../containers/ContractNew'\nimport AuthContract from './AuthContract'\nimport ContractsList from './ContractsList'\nimport QRcode from \"./QRcode\"\n\nconst GetRoutes = ({currentUser, location, match}) =>{\n  const renderIf = (currentUser) => {\n    if (currentUser.is_authenticated) {\n      return(\n        <Switch>\n          <Redirect from=\"/\" exact to=\"/dashboard\"/>\n          <Redirect from=\"/login\" to=\"/dashboard\"/>\n          <Redirect from=\"/signup\" to=\"/dashboard\"/>\n          <AuthRoutes exact path=\"/dashboard\" component={Dashboard}  currentUser={currentUser} />\n          <AuthRoutes exact path={`/dashboard/${currentUser.id}/contracts/new`} component={ContractNew} currentUser={currentUser}/>\n          <AuthContract exact path={`/dashboard/${currentUser.id}/contracts/:contractId`} component={ContractOwnerShow} currentUser={currentUser}/>\n          <Route exact path='/contracts' component={ContractsList}/>\n          <Route exact path={`/contracts/:contractId`} component={ContractShow} currentUser={currentUser}/>\n          <Route exact path={`/contracts/:contractId/code`} component={QRcode} currentUser={currentUser}/>\n        </Switch>\n      )\n    }else {\n      return(\n        <Switch>\n          <Redirect from=\"/\" exact to=\"/login\"/>\n          <Redirect from=\"/dashboard\" exact to=\"/login\"/>\n          <Route exact path=\"/login\" component={RegistrationForm}/>\n          <Route exact path=\"/signup\" component={RegistrationForm}/>\n          <Route exact path='/contracts' component={ContractsList}/>\n          <Route exact path={`/contracts/:contractId`} component={ContractShow} currentUser={currentUser}/>\n        </Switch>\n      )\n    }\n  }\n  return(\n    renderIf(currentUser)\n  )\n}\n\nexport default withRouter(connect()(GetRoutes))\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/actionCreators'\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom'\n\nconst NavBar = ({currentUser, logoutUser}) => {\n  const handleSubmit = () => {\n    return logoutUser(currentUser)\n  }\n\n  const renderLinks = (currentUser) => {\n    if (currentUser.is_authenticated) {\n      return (\n        <nav className=\"navbar navbar-default\">\n          <div id=\"navbarCollapse\" className=\"collapse navbar-collapse\">\n              <ul className=\"nav navbar-nav\">\n                  <li>\n                    <NavLink\n                      to=\"/dashboard\"\n                    >\n                    DASHBOARD\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      to=\"/contracts\"\n                    >\n                    CONTRACTS\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      to=\"/login\"\n                      onClick={handleSubmit}\n                    >\n                    LOG OUT\n                    </NavLink>\n                  </li>\n              </ul>\n          </div>\n        </nav>\n\n      )\n    } else {\n      return(\n        <nav className=\"navbar navbar-default\">\n        </nav>\n      )\n    }\n  }\n  return (\n    renderLinks(currentUser)\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    logoutUser,\n  }, dispatch);\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(NavBar))\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux';\nimport './App.css';\nimport GetRoutes from '../components/GetRoutes'\nimport NavBar from '../components/NavBar';\nimport { withRouter } from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return(\n      <div className=\"App\">\n        <NavBar currentUser={this.props.currentUser}/>\n        <GetRoutes currentUser={this.props.currentUser}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = function(state){\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App))\n","import{\n  createStore,\n  applyMiddleware,\n  combineReducers\n} from 'redux'\nimport thunk from 'redux-thunk'\nimport userReducer from './reducers/userReducer'\nimport {reducer as formReducer} from 'redux-form'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport contractReducer from './reducers/contractReducer'\nimport messageReducer from './reducers/messageReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: ['form']\n}\n\nconst reducers = combineReducers({\n  allContracts: contractReducer,\n  currentUser: userReducer,\n  form: formReducer,\n  contractNew: formReducer,\n  message: messageReducer\n})\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\nconst middleware = [thunk]\n\nexport const store = createStore(persistedReducer, composeWithDevTools(\n  applyMiddleware(...middleware),\n));\n\nexport const persistor = persistStore(store);\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_CONTRACTS':\n      if (action.currentUser.is_authenticated === true) {\n        const allContracts = action.allContracts\n        return allContracts\n      }else {\n        return state\n      }\n\n    case 'USER_LOGOUT':\n      const allContracts = []\n      return allContracts\n\n    case 'CREATE_CONTRACT':\n      let contract = action.payload.contract\n      if (contract !== undefined) {\n        return [...state, contract]\n      } else {\n        return state\n      }\n    case 'ADD_LIKE_CONTRACT':\n      let contracts = state.map(contract => Object.assign({}, contract));\n      contracts.map( contract => {\n        if (contract.id === action.contract.id) {\n          contract.likes = action.contract.likes\n        }\n      })\n      return contracts\n    default:\n      return state\n  }\n}\n","export default (state = { is_authenticated: false }, action) => {\n  switch ( action.type ) {\n\n    case 'SUCCESSFUL_USER_LOGIN':\n      if (action.payload.currentUser.is_authenticated === true) {\n        const currentUser = Object.assign({}, action.payload.currentUser)\n        return currentUser\n      }else {\n        return state\n      }\n\n    case 'USER_LOGOUT':\n      const currentUser = Object.assign({}, {is_authenticated: false})\n      return currentUser\n\n    case 'SUCCESSFUL_USER_SIGNUP':\n      if (action.payload.currentUser.is_authenticated === true) {\n        const currentUser = Object.assign({}, action.payload.currentUser)\n        return currentUser\n      }else {\n        return Object.assign({}, state, action.payload)\n      }\n    case 'CREATE_CONTRACT':\n      const newContract =  action.payload.contract\n      if (newContract !== undefined) {\n        const user = Object.assign({}, action.payload.currentUser, { message: 'Succesfully created a contract' })\n        user.current_contracts.push(newContract)\n        return user\n      } else {\n        return Object.assign({}, state, action.payload)\n      }\n    case 'TRANSFER_CONTRACT':\n      if (action.payload.currentUser === undefined) {\n        return Object.assign({}, state, action.payload)\n      }else {\n        const currentUser = Object.assign({}, state, action.payload.currentUser, { message: 'Succesfully transfered ownership' })\n        return currentUser\n      }\n    case 'TOGGLE_CONTRACTS':\n      return Object.assign({}, state, {isHidden: !state.isHidden})\n    default:\n      return state\n  }\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'SUCCESSFUL_USER_LOGIN':\n      let message = action.payload.message\n      return message\n    case 'UNSUCCESSFUL_USER_LOGIN':\n      message = action.payload.message\n      return message\n    case 'USER_LOGOUT':\n      message = action.payload.message\n      return message\n    case 'UNSUCCESSFUL_USER_SIGNUP':\n      message = action.payload.message\n      return message\n    case 'SUCCESSFUL_USER_SIGNUP':\n      message = action.payload.message\n      return message\n    default:\n      return state\n  }\n}\n","import {Router} from \"react-router-dom\"\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport registerServiceWorker from './registerServiceWorker'\nimport history from './history'\nimport App from './containers/App'\nimport { persistor, store } from './store'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\n\nReactDOM.render(\n  <Provider store={ store }>\n    <PersistGate persistor={persistor}>\n      <Router history = {history}>\n        <App/>\n      </Router>\n    </PersistGate>\n  </Provider>,\n   document.getElementById('root')\n )\nregisterServiceWorker()\n"],"sourceRoot":""}